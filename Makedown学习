###markdown宗旨：易读易用###
可读性：markdown语法收到一些既有text-to-html格式的影响，包括Setext、atx、Textile、reStructuredText、Grutatext和EtText，而最大灵感来源其实是纯文本电子邮件格式。

####兼容HTML####

markdown语法的目标是：成为一种适合于网络的书面语言。

*Markdown 不是想要取代 HTML，甚至也没有要和它相近，它的语法种类很少，只对应 HTML 标记的一小部分。

*不在 Markdown 涵盖范围之内的标签，都可以直接在文档里面用 HTML 撰写。不需要额外标注这是 HTML 或是 Markdown；只要直接加标签就可以了。 

*要制约的只有一些 HTML 区块元素――比如&lt;div>、&lt;table>、&lt;pre>、&lt;p> 等标签，必须在前后加上空行与其它内容区隔开，还要求它们的开始标签与结尾标签不能用制表符或空格来缩进。Markdown 的生成器有足够智能，不会在 HTML 区块标签外加上不必要的 <p> 标签。

####特殊字符自动转换####

有两个字符需要特殊处理： < 和 & 。 < 符号用于起始标签，& 符号则用于标记 HTML 实体，如果你只是想要显示这些字符的原型，你必须要使用实体的形式，像是 &lt; 和 &amp;。

Markdown让你可以自然地书写字符，需要转换的有它来处理。如果使用的&字符是HTML实体的一部分，它会保留原状，否则它会被转换成&amp;.

在code范围内，不论是行内还是区块，<和&两个符号都一定会转换成HTML实体，这项特性可以让你很容易的用markdown些HTML code。

####区块元素

###段落和换行

    一个Markdown段落是由一个或多个连续的文本行组成，他的枪后要有一个以上的空行（空行的定义是现实上看起来像是空的，便会被视为空行。）普通段落不该用空格或制表符来缩进。
    
    由一个或多个连续的文本行组成意味着markdown允许段落内的强迫换行（插入换行符），这个特性和其他大部分的text-to-HTML格式不一样，其他的格式会把每个换行符都转成<br/>标签。
    
    如果你确实想要依赖markdown来插入<br/>标签的话，再插入处先按入两个以上空格然后回车。
    
    虽然靠多按空格来产生<br/>麻烦，但是简单地每个换行都用<br/>的方法在markdown中并不合适.
    
###标题
    
    markdown支持两种以上的标题语法：类Setext和类atx形式。
    
    Setext形式用底线的形式，利用==（最高阶标题）和（第二阶标题），例如：
    
        
        This is an H1
        =============
        
        This is an H2
        _____________
    
    任何数量的=和-效果相同
    
    类Atx形式则是在吭首插入1到6个#，对应到标题1到6阶，例如
    
        #这是H1
        
        ##这是H2
        
        ######这是H6
    
###区块引用Blockquotes

    Markdown 标记区块引用是使用类似 email 中用 > 的引用方式。如果你还熟悉在 email 信件中的引言部分，你就知道怎么在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 >
    
    Markdown 也允许你偷懒只在整个段落的第一行最前面加上 > ：
    
    区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 > ：
    
    引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等：
    
###列表

    Markdown支持有序列表和无序列表。
    
    无序列表使用星号、加号或减号作为列表标记。
        -   Red
        -   Green
        -   Blue
    
    有序列表使用数字接着一个英文句点。
        1.  Bird
        2.  McHale
        3.  Parish
    
###代码区块
    和程序相关的写作或是标签语言原始码通常会有已经排版好的代码区块，通常这些区块我们并不希望它以一般段落文件的方式去排版，而是照原来的样子显示，Markdown 会用 <pre> 和 <code> 标签来把代码区块包起来。
    
    一个代码区块会一直持续到没有缩进的那一行（或是文件结尾）。
    
    在代码区块里面， & 、 < 和 > 会自动转成 HTML 实体，这样的方式让你非常容易使用 Markdown 插入范例用的 HTML 原始码，只需要复制贴上，再加上缩进就可以了，剩下的 Markdown 都会帮你处理，例如：
    
    代码区块中，一般的 Markdown 语法不会被转换，像是星号便只是星号，这表示你可以很容易地以 Markdown 语法撰写 Markdown 语法相关的文件。

###分割线
    
    可以使用一行中三个以上的星号、减号、底线来创建分割线，行内不能有其他东西。
    
    如下例子
* * *

***

*****

- - -

---------------------------------------

###区段元素
####链接
    
    markdown支持的链接支持行内式和参考式两种。
        行内式：在方括号后面紧接着圆括号并插入网址链接即可，如果要在连接的title文字，只要在网址后面，用双引号把title文字包起来即可。
        
            如果你要是链接同样的主机资源，可以使用相对路径：
                See my [About](http://www.baidu.com/ heh) page for details
See my [About](http://www.baidu.com/ "heh") page for details.

        参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记。
            
            参考式的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：
                This is [an example] [id] reference-style link
            
            你可以选择性的在另个方括号之间加入空格。
            
            接着在文件的任意出，你可以把这个标记的内容定义出来：
                [id]: http://www.baidu.com/ "baidu"
                
                链接内容定义的形式为：
                    方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字
                    接着一个冒号
                    接着一个以上的空格或制表符
                    接着链接的网址
                    选择性地接着 title 内容，可以用单引号、双引号或是括弧包着
See my [About][hehe] page for details.
[hehe]:http://www.baidu.com "haha"

        网址定义只有在产生链接的时候用到，并不会直接出现在文件之中。

        链接辨别标签可以有字母、数字、空白和标点符号，但是并不区分大小写，因此下面两个链接是一样的：
        
        隐式链接标记功能让你可以省略指定链接标记，这种情形下，链接标记会视为等同于链接文字，要用隐式链接标记只要在链接文字后面加上一个空的方括号，如果你要让 "Google" 链接到 google.com，你可以简化成：
        [Google][]
        然后定义链接内容：
            [Google]: http://google.com/

###强调
    markdown使用（*）和底线（_）作为标记强调字词的符号，被*或_包围的字词会被转成用<em>标签包围。用两个*或_标签包围的话，会被转成<strong>.
    
    如果*和_两边都是空白的话，他就会被当做普通符号
    
*single asterisks*

_single underscores_

**double asterisks**

__double underscores__

###代码
    如果要标记一小段行内代码，你可以用反引号把它包起来（`）
use the `printf()` function

    如果要在代码区段内插入反引号，可以用多个反引号来开启和结束代码区段：
``This is a literal backtick(`) here.``
    
    在代码区段内，&和方括号都会被自动转成HTML实体，这使得插入HTML原始码变得很容易。

###图片
    很明显，使用纯文本插入图片有难度，但是用Markdown提供了和链接相似的语法来标记图片。同样允许两种形式：行内式和参考式。
    
    行内式的图片看起来像是：
    ![Alt text](/path/to/img.jpg)
    ![Alt text](/path/to/img.jpg "Optional title")
    
    参考式的图片语法向
        ![Alt text][id]
        [id]: url/to/image  "Optional title attribute"

###其他

####自动链接
    只要用尖括号抱起来，markdown就会自动将他转成链接，一般网址的链接文字和链接地址一样。如
        <http://example.com/>
        会被转为：
        <a href="http://example.com/">http://example.com/</a>
        
####反斜杠
